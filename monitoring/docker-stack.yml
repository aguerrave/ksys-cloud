version: '3.7'

networks:
  frontend:
    external: true
    name: ksys_front_net
  backend:  
    driver: overlay
    attachable: true

volumes:
  prometheus_data:
    external: true
    name : ksys_prometheus_data
  grafana_data:
    external: true
    name : ksys_grafana_data


services:

  ################################################################
  # Prometheus 
  #  - runs on manager node
  ################################################################
  prometheus:
    image: prom/prometheus:v2.7.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    ports:
      - "8201:9090"
    deploy:
      labels:
        #traefik.frontend.auth.basic.usersFile: /path/.htpasswd   
        #traefik.frontend.auth.basic.users: "admin:$$axxxxxxxxxxxxxxxxxxxxxxxxx"
        - "traefik.backend=prometheus"
        - "traefik.frontend.rule=PathPrefix:/prometheus"
        - "traefik.port=9090"
        - "traefik.enable=true"
        - "traefik.docker.network=ksys_front_net"
        # - "traefik.weight=10"
        # - "traefik.backend.loadbalancer.swarm=true"
        # - "traefik.backend.loadbalancer.method=drr"
        # - "traefik.frontend.redirect.regex=^(.*)/prometheus$$"
        # - "traefik.frontend.redirect.replacement=$$1/prometheus/"
        # - "traefik.frontend.rule=PathPrefix:/prometheus;ReplacePathRegex: ^/prometheus/(.*) /$$1"
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend

  alertmanager:
    image: prom/alertmanager:v0.16.1
    ports:
      - 8203:9093
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    networks:
      - frontend
      - backend
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager


  ################################################################
  # The promethes node-exporter 
  # For each node a separte service need to be added 
  ################################################################
  # START NODE-EXPORTERS.....
  node-exporter:
    image: prom/node-exporter:v0.17.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    deploy:
      mode: global
    networks:
      - backend

  # manager-001:
  #   image: prom/node-exporter:v0.17.0
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--path.rootfs=/host'
  #     - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
  #     - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
  #   deploy:
  #     placement:
  #       constraints:
  #        # Hostname of the manager node!
  #       #  - node.hostname == manager-001
  #        - node.role == manager
  #   networks:
  #     - backend

  # worker-001:
  #   image: prom/node-exporter:v0.17.0
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--path.rootfs=/host'
  #     - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
  #     - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
  #   deploy:
  #     placement:
  #       constraints:
  #        # Hostname of the first woker node!
  #       #  - node.hostname == worker-001
  #        - node.role == manager
  #   networks:
  #     - backend
  ################################################################
  # END NODE-EXPORTERS.....
  ################################################################


  ################################################################
  # cAdvisor
  #   - runs on every node
  ################################################################
  # START CADVISORS.....
  cadvisor:
    image: google/cadvisor:v0.32.0
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
    networks:
      - backend

  # docker-manager-001:
  #   image: google/cadvisor:v0.32.0
  #   volumes:
  #   - /:/rootfs:ro
  #   - /var/run:/var/run:rw
  #   - /sys:/sys:ro
  #   - /var/lib/docker/:/var/lib/docker:ro
  #   deploy:
  #     placement:
  #       constraints:
  #        # Hostname of the first manager node!
  #         - node.hostname == manager-001
  #   networks:
  #     - backend

  # docker-worker-001:
  #   image: google/cadvisor:v0.32.0
  #   volumes:
  #   - /:/rootfs:ro
  #   - /var/run:/var/run:rw
  #   - /sys:/sys:ro
  #   - /var/lib/docker/:/var/lib/docker:ro
  #   deploy:
  #     placement:
  #       constraints:
  #        # Hostname of the first woker node!
  #         - node.hostname == worker-001
  #   networks:
  #     - backend

  ################################################################
  # END CADVISORS.....
  ################################################################


  ################################################################
  # Grafana
  #  - runs on manager node
  ################################################################
  grafana:
    image: grafana/grafana:5.4.3
    depends_on:
      - prometheus
    #environment:
    #  GF_SMTP_ENABLED: "true"
    #  GF_SMTP_HOST: "mailgateway:25"
    #  GF_SMTP_FROM_ADDRESS: "alert@myhost.com"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    ports:
      - "8202:3000"
    deploy:
      labels:
        - "traefik.backend=grafana"
        - "traefik.frontend.rule=PathPrefixStrip:/grafana"
        - "traefik.port=3000"
        - "traefik.enable=true"
        - "traefik.docker.network=ksys_front_net"
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend
